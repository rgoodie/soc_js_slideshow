<?php

/**
 * @file soc_js_slide.module
 * TODO: Enter file description here.
 */

define('SOC_JS_SLIDER_TITLE','SoC JS Slider ');
define('SOC_JS_SLIDER_DESC', '[slideshow:#DIVID] Produces javascript for slideshow from the specified element ID given. ');
define('SOC_JS_SLIDER_FILTER_NAME', 'soc_js_slider_filter');
define('SOC_JS_SLIDER_JS_FILE_SRC', 'soc_js_slider.js');

define('SOC_JS_SLIDER_HTML_CTRL_FIRST', '&lt;&lt;');
define('SOC_JS_SLIDER_HTML_CTRL_PREV', '&lArr;');
define('SOC_JS_SLIDER_HTML_CTRL_NEXT', '&rArr;');
define('SOC_JS_SLIDER_HTML_CTRL_LAST', '&gt;&gt;');
define('SOC_JS_SLIDER_HTML_CONTROL_PLACEMENT', 0);

/**
 * Implements hook_permission().
 */
function soc_js_slider_permission() {
  return array(
    'Administer soc js slideshow'=>  array(
      'title' => t('Administer ' . SOC_JS_SLIDER_TITLE),
      'description' => t(SOC_JS_SLIDER_DESC),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function soc_js_slider_menu() {
  $items['admin/config/soc/slider'] = array(
    'title' => 'Slider Options',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_soc_js_slider_settings'),
    'access arguments' => array('Administer soc js slideshow'),

  );

  return $items;
}

function _soc_js_slider_settings() {

  $form = array();
  $form['soc_js_slider_control_first'] = array(
   '#type' => 'textfield',
   '#title' => t('HTML Element that will act as the "<b>first</b>" button on slide show controls.'),
   '#default_value' => variable_get('soc_js_slider_control_first', SOC_JS_SLIDER_HTML_CTRL_FIRST),
   '#size' => 60,
   '#maxlength' => 128,
   '#required' => TRUE,
   );
  $form['soc_js_slider_control_prev'] = array(
   '#type' => 'textfield',
   '#title' => t('HTML Element that will act as the "<b>previous</b>" button on slide show controls.'),
   '#default_value' => variable_get('soc_js_slider_control_prev', SOC_JS_SLIDER_HTML_CTRL_PREV),
   '#size' => 60,
   '#maxlength' => 128,
   '#required' => TRUE,
   );

  $form['soc_js_slider_control_next'] = array(
   '#type' => 'textfield',
   '#title' => t('HTML Element that will act as the "<b>next</b>" button on slide show controls.'),
   '#default_value' => variable_get('soc_js_slider_control_next', SOC_JS_SLIDER_HTML_CTRL_NEXT),
   '#size' => 60,
   '#maxlength' => 128,
   '#required' => TRUE,
   );

  $form['soc_js_slider_control_last'] = array(
   '#type' => 'textfield',
   '#title' => t('HTML Element that will act as the "<b>last</b>" button on slide show controls.'),
   '#default_value' => variable_get('soc_js_slider_control_last', SOC_JS_SLIDER_HTML_CTRL_LAST),
   '#size' => 60,
   '#maxlength' => 128,
   '#required' => TRUE,
   );

  $form['soc_js_slider_control_placement'] = array(
    '#type' => 'select',
    '#title' => t('Control Placement'),
    '#options' => array(
      0 => t('Controls on top'),
      1 => t('Controls on bottom'),
      2 => t('No controls visible'),
      ),
    '#default_value' => variable_get('soc_js_slider_control_placement', SOC_JS_SLIDER_HTML_CONTROL_PLACEMENT),
    );



  return system_settings_form($form);
}


/**
 * Implements hook_filter_info().
 */
function soc_js_slider_filter_info() {
  $filters[SOC_JS_SLIDER_FILTER_NAME] = array(
    'title' => t(SOC_JS_SLIDER_TITLE),
    'description' => t(SOC_JS_SLIDER_DESC),
    'process callback' => '_soc_js_slider_process',
  );

  return $filters;
}




function _soc_js_slider_process($text, $filter, $format, $langcode, $cache, $cache_id) {


  preg_match_all("/\[slideshow:(#[\S]+)\]/", $text, $matches);

  // If no match return and be done.
  if (! isset($matches[1])) {
    return $text;
  }



  // gather information
  $text_to_remove   = $matches[0];
  $elementid        = $matches[1];

  // remove filter trigger text
  $text = str_replace($text_to_remove, '', $text);


  // Do we have any matches located in the firs match
  if (isset($elementid[0])) {

    // Inject javascript file -- moved to .info file
    //drupal_add_js(drupal_get_path('module', 'soc_js_slider') . '/' . SOC_JS_SLIDER_JS_FILE_SRC, 'file');


    // Inject options into a javascript variable
    $js_slider_options = array(
      'first'=>variable_get('soc_js_slider_control_first', SOC_JS_SLIDER_HTML_CTRL_FIRST),
      'prev'=>variable_get('soc_js_slider_control_prev', SOC_JS_SLIDER_HTML_CTRL_PREV),
      'next'=>variable_get('soc_js_slider_control_next', SOC_JS_SLIDER_HTML_CTRL_NEXT),
      'last'=>variable_get('soc_js_slider_control_last', SOC_JS_SLIDER_HTML_CTRL_LAST),
      'ctnl_placement'=>variable_get('soc_js_slider_control_placement', SOC_JS_SLIDER_HTML_CONTROL_PLACEMENT)
    );

    // Inject $element[0] into an array list. Prepare
    // for multiples just in case
    $js_slider_options['element_zero_collection'][] = $elementid[0];


    drupal_add_js(array('soc_js_slider'=>$js_slider_options), 'setting');

    // Call it
    //drupal_add_js('jQuery(document).ready(function () { a = new SlideShow("' . $elementid[0] . '"); a.init(); });', 'inline');
  }

  return $text;
}
